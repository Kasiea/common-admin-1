<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.system.mapper.TSDepartMapper">
  <resultMap id="BaseResultMap" type="com.common.system.entity.TSDepart">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="departname" jdbcType="VARCHAR" property="departname" />
    <result column="parentdepartid" jdbcType="VARCHAR" property="parentdepartid" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="org_type" jdbcType="VARCHAR" property="orgType" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.common.system.entity.TSDepart">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, departname, parentdepartid, org_code, org_type, mobile, fax, address
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.common.system.entity.TSDepartExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_s_depart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.common.system.entity.TSDepartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_s_depart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_s_depart
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_s_depart
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.system.entity.TSDepartExample">
    delete from t_s_depart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.common.system.entity.TSDepart">
    insert into t_s_depart (ID, departname, parentdepartid, 
      org_code, org_type, mobile, 
      fax, address, description
      )
    values (#{id,jdbcType=VARCHAR}, #{departname,jdbcType=VARCHAR}, #{parentdepartid,jdbcType=VARCHAR}, 
      #{orgCode,jdbcType=VARCHAR}, #{orgType,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.common.system.entity.TSDepart">
    insert into t_s_depart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="departname != null">
        departname,
      </if>
      <if test="parentdepartid != null">
        parentdepartid,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="orgType != null">
        org_type,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="parentdepartid != null">
        #{parentdepartid,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null">
        #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update t_s_depart
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        departname = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentdepartid != null">
        parentdepartid = #{record.parentdepartid,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgType != null">
        org_type = #{record.orgType,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null">
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_s_depart
    set ID = #{record.id,jdbcType=VARCHAR},
      departname = #{record.departname,jdbcType=VARCHAR},
      parentdepartid = #{record.parentdepartid,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      org_type = #{record.orgType,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_s_depart
    set ID = #{record.id,jdbcType=VARCHAR},
      departname = #{record.departname,jdbcType=VARCHAR},
      parentdepartid = #{record.parentdepartid,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      org_type = #{record.orgType,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.system.entity.TSDepart">
    update t_s_depart
    <set>
      <if test="departname != null">
        departname = #{departname,jdbcType=VARCHAR},
      </if>
      <if test="parentdepartid != null">
        parentdepartid = #{parentdepartid,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null">
        org_type = #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.common.system.entity.TSDepart">
    update t_s_depart
    set departname = #{departname,jdbcType=VARCHAR},
      parentdepartid = #{parentdepartid,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_type = #{orgType,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.system.entity.TSDepart">
    update t_s_depart
    set departname = #{departname,jdbcType=VARCHAR},
      parentdepartid = #{parentdepartid,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      org_type = #{orgType,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>